#!/bin/bash
export DISPLAY=:0

export identity=$(hostname | cut -d. -f1)

export MQTT_SERVER=mqtt.ak-online.be
export MQTT_TOPIC="mqtt-screensaver/$identity/state"
export MQTT_TOPIC_AVAIL="mqtt-screensaver/$identity/bridgestate"

RIGHT_EDGE=$(xdpyinfo | grep dimensions | sed -r 's/^[^0-9]*([0-9]+)x[0-9]+.*$/\1/')

function screen_off {
	xscreensaver-command -activate
	xset dpms force off
	echo "poked screen to keep it off"
}

function screen_on {
	xscreensaver-command -deactivate
	xset dpms force on
	xdotool mousemove $RIGHT_EDGE $((10#$(date +%M)*10))
	echo "poked screen to keep it on"
}

function publish_discovery {
	mosquitto_pub \
		-h $MQTT_SERVER \
		-t "homeassistant/switch/mqttscreensaver/$identity/config" \
		-r \
		-s \
		<<EOT
	{
		"name": "Screensaver on $identity",
		"state_topic": "$MQTT_TOPIC",
		"command_topic": "$MQTT_TOPIC",
		"availability_topic": "$MQTT_TOPIC_AVAIL",
		"unique_id": "mqtt_screensaver_$identity",
		"device": {
			"identifiers": "mqtt screensaver on $identity",
			"name": "mqtt-screensaver",
			"model": "mqtt-screensaver"
		}
	}
EOT
	mosquitto_pub -h $MQTT_SERVER -t "$MQTT_TOPIC_AVAIL" -m online
}

shutdown=false

function handle_sigint {
	echo "shutdown requested"
	shutdown=true
}
trap 'handle_sigint' SIGINT

desired_state="unknown";
while [[ $shutdown = false ]]; do
	continue=true
	mosquitto_sub \
		-h $MQTT_SERVER \
		--will-topic $MQTT_TOPIC_AVAIL \
		--will-payload offline \
		--will-retain \
		-t "$MQTT_TOPIC" \
	| while [[ $continue = true ]]; do
		[[ $shutdown = false ]] && publish_discovery

		# read the possibly next target state from MQTT
		read -t 50 NewState
		read_rc=$?
		echo "read state: <$NewState> with RC$read_rc"

		case "$read_rc" in
			0|142) continue=true;;
			*) continue=false;
		esac

		# and if its a ON or OFF update our state
		case "$NewState" in
			OFF) desired_state=OFF ;;
			ON)  desired_state=ON ;;
		esac

		# then behave according to our state
		case "$desired_state" in
			OFF) screen_off ;;
			ON)  screen_on  ;;
		esac
	done
done
mosquitto_pub -h $MQTT_SERVER -t "$MQTT_TOPIC_AVAIL" -m offline
